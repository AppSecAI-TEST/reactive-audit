# This is the default values for all parameters.
#
# Default parameter
# Throw an AuditReactiveException for each violation. Accept true or false
auditReactive.throwExceptions=false
# Regular expression to apply the rule for thread with a specific pattern.
# You can reject some thread like (?!^main$)(^.*$)
auditReactive.threadPattern="^(ForkJoinPool-.*)"
# Delay after the bootstrap before check the first rule.
# Then, it's possible to accept to violate some rules in the startup phase.
auditReactive.bootstrapDelay=0
# Detect the file blocking api, but only if the latency is medium or high. Accept low, medium or high.
auditReactive.file=medium
# Detect all the network blocking api. Accept low, medium or high.
auditReactive.network=low
# Detect all the cpu blocking api. Accept low, medium or high.
auditReactive.cpu=low
# Set the default log level to warning.
# The low latency generate an info log.
# The medium latency generate a warning log.
# The high latency generate a severe log.
# So, with warning, only the medium and high generate a log, even if the file, network or cpu use low.
auditReactive.logLevel=warning
# The filename use to generate the log. Accept filename with xml suffixe to generate an XML file.
# Else, generate a text file.
# See java.util.logging.FileHandler
auditReactive.logOutput=%h/audit-reactive-%u.log
# The log format use to generate the log.
# See java.util.logging.SimpleFormatter
auditReactive.logFormat=%4$-7s: %5$s%6$s%n
# The maximum size of the log file before rotate.
# Zero is for no limit.
# See java.util.logging.FileHandler
auditReactive.logSize=0
