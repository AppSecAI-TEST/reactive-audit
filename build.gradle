buildscript {
    repositories {
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
    }

    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.4"
    }
}

repositories {
    mavenCentral()
}

project.ext {
    aspectjVersion = '1.8.0'
}

apply plugin: 'aspectj'
apply plugin: 'distribution'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = '8'
targetCompatibility = '8'

group = "com.octo.reactive.audit"
version = '0.0.2-SNAPSHOT'
description = 'JVM Agent to detect blocking IO call'


dependencies {
    compile project(":audit-reactive-lib")
    compile "org.aspectj:aspectjrt:${aspectjVersion}"
    compile "org.aspectj:aspectjtools:${aspectjVersion}"

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testRuntime "org.aspectj:aspectjweaver:${aspectjVersion}"
    testRuntime "org.aspectj:aspectjrt:${aspectjVersion}"
    testRuntime "org.scala-lang:scala-library:2.11.1"
    testRuntime "org.apache.derby:derby:10.10.2.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

test {
    // Juste pour afficher les logs dans les tests
//    testLogging.showStandardStreams = true
//    beforeTest { descriptor ->
//        logger.lifecycle("Running test: " + descriptor)
//    }

    include 'com/octo/reactive/audit/**'
//    include 'com/octo/reactive/audit/java/util/concurrent/**'
    def weaver = "-javaagent:" +
            project.configurations.testRuntime.find { it.name.startsWith("aspectjweaver-") }
    def auditReactiveConf = "-DauditReactive=src/test/resources/testAuditReactive.properties"
    def logConfig = "-Djava.util.logging.config.file=src/test/resources/testLogging.properties"
    jvmArgs = [weaver, auditReactiveConf, logConfig]
}

distributions {
    main {
        contents {
            into('bin') {
                from { 'src/main/dist/bin' }
                fileMode = 0755
            }
            into('lib') {
                from project(':audit-reactive-lib').jar
                from jar
                rename { it.substring(0, it.indexOf(version) - 1) + it.substring(it.lastIndexOf("."), it.size()) }
            }

            into('lib') {
                from project.configurations.testRuntime.find { it.name.startsWith("aspectjweaver-") }
                rename { "aspectjweaver.jar" }
            }
        }
    }
}
